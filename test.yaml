kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: example-pipeline
spec:
  params:
  - description: 'Snapshot of the application'
    name: SNAPSHOT
    default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
    type: string
  - description: 'Namespace where the application is running'
    name: NAMESPACE
    default: "default"
    type: string
  - description: 'Expected output'
    name: EXPECTED_OUTPUT
    default: "Hello World!"
    type: string
  tasks:
  - name: task-1
    description: Placeholder task that prints the Snapshot and outputs standard TEST_OUTPUT
    params:
    - name: SNAPSHOT
      value: $(params.SNAPSHOT)
    taskSpec:
      params:
      - name: SNAPSHOT
      results:
      - name: TEST_OUTPUT
        description: Test output
      steps:
      - image: registry.redhat.io/openshift4/ose-cli:latest
        env:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        script: |
          sleep 10
          dnf -y install jq
          echo -e "Example test task for the Snapshot:\n ${SNAPSHOT}"
          # Run custom tests for the given Snapshot here
          # After the tests finish, record the overall result in the RESULT variable
          RESULT="SUCCESS"

          # Output the standardized TEST_OUTPUT result in JSON form
          TEST_OUTPUT=$(jq -rc --arg date $(date -u --iso-8601=seconds) --arg RESULT "${RESULT}" --null-input \
            '{result: $RESULT, timestamp: $date, failures: 0, successes: 1, warnings: 0}')
          echo -n "${TEST_OUTPUT}" | tee $(results.TEST_OUTPUT.path)
  - name: task-2
    description: check secrets
    taskSpec:
      steps:
      - image: registry.redhat.io/openshift4/ose-cli:latest
        env:
        - name: OPTIONS_FILE
          valueFrom:
            secretKeyRef:
              name: clc-options-yaml-file-2
              key: CLC_OPTIONS_YAML
        - name: OPTIONS_ENCODE_FILE
          valueFrom:
            secretKeyRef:
              name: clc-options-yaml-file-1
              key: CLC_OPTIONS_YAML_1
        script: |
          #!/usr/bin/env sh
          set -eux
          echo "--- raw yaml file ----"
          echo ${OPTIONS_FILE} > options.yaml
          cat options.yaml
          echo "--- encoded yaml file ------"
          echo ${OPTIONS_ENCODE_FILE} | base64 -d > options.yaml
          cat options.yaml
